{"version":3,"file":"static/js/690.37549693.chunk.js","mappings":"iPAGaA,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACE,UAACC,EAAD,YACE,gBACEC,MAAM,MACNC,IAAG,0CAAqCH,EAAKI,cAC7CC,IAAI,MAEN,uBAAIL,EAAKM,QACT,uBAAIN,EAAKO,WAAa,cAG3B,EAMKN,EAAOO,EAAAA,GAAAA,GAAH,4FClBGC,EAAU,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxB,OACE,UAAC,EAAD,YACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAGhB,EAMKX,EAAOO,EAAAA,GAAAA,GAAH,+CCeV,EA1BuB,WACrB,OAAwBK,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA+BC,EAAAA,EAAAA,MAAvBC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAUnB,OARAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCF,EADnC,YAC8CD,EAD9C,8CAGFI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,IACNF,MAAK,SAAAC,GAAC,OAAIP,EAAQO,EAAZ,GACV,GAAE,CAACL,EAAWC,IAEG,YAAdD,GAA2BH,EAAKd,KACT,IAArBc,EAAKd,KAAKwB,QACL,+CAEFV,EAAKd,KAAKyB,KAAI,SAAAC,GAAE,OAAI,SAAC3B,EAAD,CAAOC,KAAM0B,GAASA,EAAGC,GAA7B,IAEP,YAAdV,GAA2BH,EAAKc,QACN,IAAxBd,EAAKc,QAAQJ,QACR,iDAEFV,EAAKc,QAAQH,KAAI,SAAAC,GAAE,OAAI,SAACjB,EAAD,CAASC,OAAQgB,GAASA,EAAGC,GAAjC,SAJ5B,CAMD,C","sources":["components/Casts/Casts.jsx","components/Reviews/Reviews.jsx","components/AdditionalInfo/AdditionalInfo.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport const Casts = ({ cast }) => {\n  return (\n    <Item>\n      <img\n        width=\"100\"\n        src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\n        alt=\"\"\n      />\n      <p>{cast.name}</p>\n      <p>{cast.character || 'unknown'}</p>\n    </Item>\n  );\n};\n\nCasts.propTypes = {\n  cast: PropTypes.object,\n};\n\nconst Item = styled.li`\n  padding-left: 16px;\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport const Reviews = ({ review }) => {\n  return (\n    <Item>\n      <h3>{review.author}</h3>\n      <p>{review.content}</p>\n    </Item>\n  );\n};\n\nReviews.propTypes = {\n  review: PropTypes.object,\n};\n\nconst Item = styled.li`\n  padding-left: 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Casts } from 'components/Casts/Casts';\nimport { Reviews } from 'components/Reviews/Reviews';\n\nconst AdditionalInfo = () => {\n  const [info, setInfo] = useState({});\n  const { detailsId, movieId } = useParams();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/${detailsId}?api_key=a993acaefbe45c7033feacc337f4a924`\n    )\n      .then(p => p.json())\n      .then(p => setInfo(p));\n  }, [detailsId, movieId]);\n\n  if (detailsId === 'credits' && info.cast) {\n    if (info.cast.length === 0) {\n      return <h2>No casts was found</h2>;\n    }\n    return info.cast.map(el => <Casts cast={el} key={el.id} />);\n  }\n  if (detailsId === 'reviews' && info.results) {\n    if (info.results.length === 0) {\n      return <h2>No reviews was found</h2>;\n    }\n    return info.results.map(el => <Reviews review={el} key={el.id} />);\n  }\n};\n\nexport default AdditionalInfo;\n"],"names":["Casts","cast","Item","width","src","profile_path","alt","name","character","styled","Reviews","review","author","content","useState","info","setInfo","useParams","detailsId","movieId","useEffect","fetch","then","p","json","length","map","el","id","results"],"sourceRoot":""}